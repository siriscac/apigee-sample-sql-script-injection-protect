<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
    <Description/>
    <FaultRules>
        <FaultRule name="InvalidClientID">
            <Step>
                <Condition>verifyapikey.Authorize-Client-Application.failed = true</Condition>
                <Name>Error-Invalid-client_id</Name>
                <FaultRules/>
            </Step>
        </FaultRule>
    </FaultRules>
    <PreFlow name="PreFlow">
        <Request>
            <Step>
                <Condition>request.verb = "OPTIONS"</Condition>
                <Name>Cors-Preflighted</Name>
            </Step>
        </Request>
        <Response/>
    </PreFlow>
    <Flows>
        <Flow name="authorization">
            <Description/>
            <Request>
                <Step>
                    <Name>Validate-Request</Name>
                </Step>
                <Step>
                    <Condition>(error_type != null And error_type != "")</Condition>
                    <Name>Error-Invalid-request</Name>
                </Step>
                <Step>
                    <Name>Authorize-Client-Application</Name>
                </Step>
                <Step>
                    <Name>Get-API-Product-Scopes</Name>
                </Step>
                <Step>
                    <Name>Security-AuthorizeGet-Client-Attributes</Name>
                </Step>
                <Step>
                    <Name>Ext-Validate-request-parameters</Name>
                </Step>
                <Step>
                    <Condition>(error_type != null And error_type = "invalid_redirect_uri")</Condition>
                    <Name>Error-Invalid-request</Name>
                </Step>
                <Step>
                    <Condition>(error_variable != null)</Condition>
                    <Name>Invalid-Authorization-Request</Name>
                </Step>
                <Step>
                    <Condition>nonce != null and nonce != ""</Condition>
                    <Name>Nonce-Replay-Attack-Validation</Name>
                </Step>
                <Step>
                    <Condition>nonce_cache_value != null</Condition>
                    <Name>Assign-Replay-Attach-Error</Name>
                </Step>
                <Step>
                    <Condition>(error_variable != null)</Condition>
                    <Name>Invalid-Authorization-Request</Name>
                </Step>
                <Step>
                    <Condition>nonce != null and nonce != ""</Condition>
                    <Name>Populate-Nonce-Information</Name>
                </Step>
                <Step>
                    <Name>Create-Application-Session</Name>
                </Step>
                <Step>
                    <Name>Store-Application-Session</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Name>Assign.RedirectConsentApp</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/authorize")</Condition>
        </Flow>
        <Flow name="token">
            <Description/>
            <Request>
                <Step>
                    <Condition>request.formparam.grant_type = "authorization_code" or request.formparam.grant_type = "client_credentials"</Condition>
                    <Name>OAuth.GenerateAccessToken</Name>
                </Step>
                <Step>
                    <Name>OAuth.RefreshAccessToken</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Condition>(request.formparam.grant_type = "authorization_code" or request.formparam.grant_type = "client_credentials") and oauthV2.failed = false</Condition>
                    <Name>Extract-Token-Response</Name>
                </Step>
                <Step>
                    <Condition>request.formparam.grant_type = "authorization_code" and oauthV2.failed = false</Condition>
                    <Name>Get-Application-Attributes</Name>
                </Step>
                <Step>
                    <Condition>request.formparam.grant_type = "authorization_code" and oauthV2.failed = false</Condition>
                    <Name>Assign-ID-Token-Payload-authorization_code-flow</Name>
                </Step>
                <Step>
                    <Condition>request.formparam.grant_type = "authorization_code" and oauthV2.failed = false</Condition>
                    <Name>Generate-ID-Token</Name>
                </Step>
                <Step>
                    <Condition>request.formparam.grant_type = "authorization_code" and oauthV2.failed = false</Condition>
                    <Name>Assign.TokenResponse</Name>
                </Step>
                <Step>
                    <Condition>request.formparam.grant_type = "client_credentials" and oauthV2.failed = false</Condition>
                    <Name>Assign.TokenResponseCC</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/token") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="authorized">
            <Description/>
            <Request>
                <Step>
                    <Name>Verify.ConsentAppAPIKey</Name>
                </Step>
                <Step>
                    <Name>Extract-Transaction-session-id</Name>
                </Step>
                <Step>
                    <Condition>auth.transaction.session.id != null and auth.transaction.session.id != ""</Condition>
                    <Name>Get-Application-Session</Name>
                </Step>
                <Step>
                    <Condition>(auth.transaction.session.id = null or rauth.transaction.session.id = "") or (session.Payload = null) or (session.Payload = "")</Condition>
                    <Name>Error-Response-Invalid-Session</Name>
                </Step>
                <Step>
                    <Name>Extract-Application-Session-information</Name>
                </Step>
                <Step>
                    <Condition>response_type_id_token = true</Condition>
                    <Name>Get-Application-Attributes</Name>
                </Step>
                <Step>
                    <Name>Assign-JWT-Payload</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Condition>response_type_code = true</Condition>
                    <Name>Generate-Authorization-Code</Name>
                </Step>
                <Step>
                    <Condition>response_type_token = true</Condition>
                    <Name>Security-Generate-Access-Token-Implicit</Name>
                </Step>
                <Step>
                    <Condition>response_type_id_token = true</Condition>
                    <Name>Generate-ID-Token</Name>
                </Step>
                <Step>
                    <Name>Ext-Construct-Response</Name>
                </Step>
                <Step>
                    <Name>Assign-Consent-Application-TX-Response</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/authorized/transactions/*") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="authorized">
            <Description/>
            <Request>
                <Step>
                    <Name>Verify.ConsentAppAPIKey</Name>
                </Step>
                <Step>
                    <Name>Extract-Transaction-session-id</Name>
                </Step>
                <Step>
                    <Condition>auth.transaction.session.id != null and auth.transaction.session.id != ""</Condition>
                    <Name>Get-Application-Session</Name>
                </Step>
                <Step>
                    <Condition>(auth.transaction.session.id = null or request.formparam.sessionid = "") or (session.Payload = null) or (session.Payload = "")</Condition>
                    <Name>Error-Response-Invalid-Session</Name>
                </Step>
                <Step>
                    <Name>Extract-Application-Session-information</Name>
                </Step>
                <Step>
                    <Condition>response_type_id_token = true</Condition>
                    <Name>Get-Application-Attributes</Name>
                </Step>
                <Step>
                    <Name>Assign-JWT-Payload</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Condition>response_type_code = true</Condition>
                    <Name>Generate-Authorization-Code</Name>
                </Step>
                <Step>
                    <Condition>response_type_token = true</Condition>
                    <Name>Security-Generate-Access-Token-Implicit</Name>
                </Step>
                <Step>
                    <Condition>response_type_id_token = true</Condition>
                    <Name>Generate-ID-Token</Name>
                </Step>
                <Step>
                    <Name>Ext-Construct-Response</Name>
                </Step>
                <Step>
                    <Name>Assign-Consent-Application-TX-Response</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/authorized/transactions") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="DefaultFlow">
            <Description/>
            <Request>
                <Step>
                    <Name>Error-Operation-Unavailable</Name>
                </Step>
            </Request>
            <Response/>
        </Flow>
    </Flows>
    <PostFlow name="PostFlow">
        <Request/>
        <Response/>
    </PostFlow>
    <HTTPProxyConnection>
        <BasePath>/apis/v1/oauth</BasePath>
        <VirtualHost>secure</VirtualHost>
    </HTTPProxyConnection>
    <RouteRule name="noroute"/>
</ProxyEndpoint>